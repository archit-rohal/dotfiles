" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

runtime! debian.vim

" Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.
" This happens after /etc/vim/vimrc(.local) are loaded, so it will override
" any settings in these files.
" If you don't want that to happen, uncomment the below line to prevent
" defaults.vim from being loaded.
" let g:skip_defaults_vim = 1

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"filetype plugin indent on

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
"set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden		" Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

" vimrc copy starts from here - 

inoremap jk <esc>
" I :w!<CR>
" nmap E ZQ
" nnoremap U :w!<CR>
nmap E :q!<CR>
set autochdir      " To run terminal commands(touch newfile.txt etc) in pwd
nmap j gj
nmap k gk
nmap H 0
nmap L $
let mapleader = " "
nnoremap <Leader>s :update<CR>
set scrolloff=8
set number
set relativenumber
set numberwidth=3
set linebreak
set cpoptions+=n
highlight LineNr term=bold cterm=NONE ctermfg=226 ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
" set spell spelllang=en_us
" nnoremap <leader>p :Vex<CR>
nnoremap <leader>e :NERDTreeToggle<CR>
nnoremap <leader>t :!

" From the video - 'How to do what 90% of what plugins do with just vim' from
" thoughtbot ytc -

set path+=**

" Buffers -

nnoremap <leader>w :w!<CR>
nnoremap <leader>j :bp<CR>
nnoremap <leader>k :bn<CR>
nnoremap <leader>; :b<Space>
nnoremap <leader>h <C-w>j
nnoremap <leader>l <C-w>k
nnoremap <leader>o :bdelete<CR>

" Fzf -
nnoremap <leader>f :Files<CR>
nnoremap <leader>g :Rg<CR>
